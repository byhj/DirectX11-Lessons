
cbuffer LightBuffer
{
    float4 ambientColor;
	float4 diffuseColor;
	float3 lightDir;
	float  padding;
}

struct VS_OUT
{
    float4 Pos    : SV_POSITION;
    float2 Tex    : TEXCOORD0;
	float3 Normal : NORMAL;
};

Texture2D tex;
SamplerState texState;

float4 PS(VS_OUT ps_in) : SV_TARGET
{
   float4 texColor = tex.Sample(texState, ps_in.Tex);
   ps_in.Normal   = normalize(ps_in.Normal);
   float4 ambient = saturate(ambientColor) ;
   float4 diffuse = saturate(dot(lightDir, ps_in.Normal) * diffuseColor );
   float4 result  = ambient + diffuse;

   return texColor * result ;

}