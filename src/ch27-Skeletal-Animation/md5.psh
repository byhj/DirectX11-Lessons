
cbuffer LightBuffer
{
	float4 ambient;
	float4 diffuse;
	float3 lightDir;
	float padding;
};

struct VS_OUT
{
    float4 Pos       : SV_POSITION;
	float3 Normal    : NORMAL;
	float2 Tex       : TEXCOORD0;
	float3 Tangent   : TANGENT;
	float3 BiTangent : BITANGENT;
};

Texture2D tex	      : register(t0);
SamplerState texState : register(s0);

float4 PS(VS_OUT ps_in) : SV_TARGET
{
    float4 texColor = tex.Sample(texState, ps_in.Tex);
    ps_in.Normal    = normalize(ps_in.Normal);

	float lightIntensity = saturate( dot(-lightDir, ps_in.Normal) );

	float4 pixelColor = saturate(diffuse * lightIntensity + ambient) * texColor;

	return  pixelColor;
}